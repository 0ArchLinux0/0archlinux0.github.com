---실수모음
c++:
  ios_base::sync_with_stdio(0) 하고 stdin 과 iostream 동시에 쓰지말기(쓰레드 동기화 문제)
  로컬변수(정수, 배열, 벡터)는 초기화가 안되서 쓰레기값 들어감, 전역, 스태틱은 초기화됨

  vector.size() - k: vector.size() 는 unsigned_int이기에 오버플로우 일어남

  클래스 변수에 포인터배열 같은거 있을때 생성자에서 memset초기화 안하면
  ptr == NULL 체크시 NULL 은 그저 #define NULL 0 이기때문에
  NULL체크가 제대로 안되는 문제가 발생함

  char* 포인터는 &str[0]로 전달

  함수로 stl, 객체들을 전달하면 copy본이 감 포인터로 전달함으로써 
  메모리 적인 절약, 원본객체 액세스 o, 방지하고 싶은 경우엔 const *obj_ptr
  로 가능

  unique(vec.begin(), vec.end()) 로 중복제거로 채운후 남은 자릿수는 기존 벡터
  인덱스의 값으로 채움  1 1 2 3 2=> 1 2 3 3 2
  리턴값은 중복없이 나열된 마지막 원소 다음의 반복자 1 1 2 3 2=> idx 3 
  따라서 set으로 변환하고 싶다면 erase(unique(v.begin(), v.end()), v.end())을 하면 됨
  
java:
  class constructor안에서 list, map같은거 초기화 안한경우 re


그래프에서 union_find를 할때 n행m열이라면 지*i+j가 아닌 m*i+j임

cnt++같은 연산은 맨 마지막에 써서 실수 방지

dfs는 무조건 그냥 fx dfs(next) f-1xf로 실수방지

lca나 sparse, seg tree같은곳에서 log for문돌릴때 범위벗어나면 쓰레기값나옴
로그 범위 조심(for0, for1 로 쓸때라던가)

2차원 dfs돌릴때 범위 두번에 나눠서 실수없도록
(dfs(row, col) for(col+1 ~ col_max) {} for(row+1, row_max) for(0, col_max) {})

k진트리에선 k=1따로 처리해야 LTE 피함

제거문제는 하나에서 중복선택 조심




